@* ------------------------------------------------------------------------------
	 <auto-generated>
		 This file was generated by Sitefinity CLI v1.0.0.2
	 </auto-generated>
	 ------------------------------------------------------------------------------ *@

@model SitefinityWebApp.Mvc.Models.OpenEdgeCustomerOrdersModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Services;

<div id="gridView"></div>

<script>
	$(document).ready(function () {
		var orderApiUrl = "@Model.OpenEdgeOrderApi";

		if (orderApiUrl !== undefined && orderApiUrl !== null && orderApiUrl !== "")
		{
			var grid = $("#gridView").kendoGrid({
				editable: false,
				dataSource: {
						transport: {
							read: {
								url: orderApiUrl,
								dataType: "json"
							}
						},
						schema: {
							data: "dsOrder.ttOrder",
							total: function (e) {
								if (e.type === "read") {
									totalOrders = e.response.length;
								}
							},
							model: {
								id: "id",
								fields: {
									OrderDate: { type: "date" },
									Ordernum: { type: "number" },
									ShipDate: { type: "date" },
									PromiseDate: { type: "date" },
									OrderStatus: { type: "string" },
									Carrier: { type: "string" },
									PO: {type: "string"}
								}
							}
						},
						filter: { field: "CustNum", operator: "eq", value: @Model.CustomerNumber }
					},
				columns: [
					{
						'field': 'Ordernum',
						'title': 'Order Number'
					},
					{'field':'PO'},
					{
						'field': 'OrderDate',
						'title': 'Order Date',
						'template': kendo.template($('#order-date-template').html())
					},
					{
						'field': 'ShipDate',
						'title': 'Ship Date',
						'template': kendo.template($('#ship-date-template').html())
					},
					{
						'field': 'PromiseDate',
						'title': 'Promise Date',
						'template': kendo.template($('#promise-date-template').html())
					},
					{
						'field': 'OrderStatus',
						'title': 'Order Status'
					},
					{
						'field': 'Carrier',
						'title': 'Carrier'
					}],
				detailInit: function (e) {
					var dataCollection = null;
					$.ajax({
						url: "@Model.OpenEdgeOrderItemApi" + "?filter=Ordernum eq " + e.data.Ordernum,
						success: function (orderItems) {
							var itemNums = [];
							for (var i = 0; i < orderItems.dsOrderLine.ttOrderLine.length; i++) {
								if (orderItems.dsOrderLine.ttOrderLine[i] !== undefined) {
									itemNums.push(orderItems.dsOrderLine.ttOrderLine[i].Itemnum);
								}
							}

							if (itemNums.length > 0) {
								var filter = "";
								for (var i = 0; i < itemNums.length; i++) {
									filter += "Itemnum eq " + itemNums[i] + " or ";
								}
								var index = filter.lastIndexOf(" or ");
								filter = filter.substring(0,index);
								$.ajax({
									url: "http://oe-demo.dyndns.org:8810/Sports/rest/SportsService/Item?filter="+filter,
									success: function (items) {
										if (items !== undefined) {
											for (var i = 0; i < orderItems.dsOrderLine.ttOrderLine.length; i++) {
												if (orderItems.dsOrderLine.ttOrderLine[i] !== undefined) {
													var item = items.dsItem.ttItem.filter(item => item.Itemnum == orderItems.dsOrderLine.ttOrderLine[i].Itemnum)[0];
													orderItems.dsOrderLine.ttOrderLine[i]["ItemName"] = item.ItemName;
													orderItems.dsOrderLine.ttOrderLine[i]["Weight"] = item.Weight;
												}
											}

										}

										dataCollection = orderItems.dsOrderLine.ttOrderLine;

										$("<div/>").appendTo(e.detailCell).kendoGrid({
											dataSource: {
												data: dataCollection,
												schema: {
													model: {
														id: "id",
														fields: {
															Itemnum: { type: "number" },
															Price: { type: "number" },
															Qty: { type: "number" },
															ExtendedPrice: { type: "number" },
															OrderLineStatus: { type: "string" },
															ItemName: { type: "string" },
															Weight: { type: "number" }
														}
													}
												},
												aggregate: [{ field: "ExtendedPrice", aggregate: "sum" }]
											},
											columns: [
												{ field: "Itemnum", title: "Item Number" },
												{ field: "ItemName", title: "Item Name" },
												{ field: "Weight" },
												{ field: "OrderLineStatus" },
												{ field: "Qty" },
												{ field: "Price", template: "#=kendo.toString(data.Price, 'c')#" },
												{
													field: "ExtendedPrice", title: "Total",
													template: "#=kendo.toString(data.ExtendedPrice, 'c')#",
													footerTemplate: "<div>Total: #= kendo.toString(data.ExtendedPrice.sum, 'c') #</div>"
												}
											]
										});
									}
								});
							}
						}
					});
				}
			});

		}
	});
</script>
<script id="order-date-template" type="text/x-kendo-tmpl">
	 #= kendo.toString(kendo.parseDate(OrderDate, 'yyyy-MM-dd'), 'MM/dd/yyyy') #
</script>
<script id="ship-date-template" type="text/x-kendo-tmpl">
	 #= kendo.toString(kendo.parseDate(ShipDate, 'yyyy-MM-dd'), 'MM/dd/yyyy') #
</script>
<script id="promise-date-template" type="text/x-kendo-tmpl">
	 #= kendo.toString(kendo.parseDate(PromiseDate, 'yyyy-MM-dd'), 'MM/dd/yyyy') #
</script>


@Html.StyleSheet(Url.EmbeddedResource("Telerik.Sitefinity.Resources.Reference", "Telerik.Sitefinity.Resources.Scripts.Kendo.styles.kendo_common_min.css"), "bottom")
@Html.StyleSheet(Url.EmbeddedResource("Telerik.Sitefinity.Resources.Reference", "Telerik.Sitefinity.Resources.Scripts.Kendo.styles.kendo_default_min.css"), "bottom")
@Html.Script(ScriptRef.KendoAll, "top")
