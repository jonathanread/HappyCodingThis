@model Telerik.Sitefinity.Frontend.Navigation.Mvc.Models.INavigationModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Navigation.Mvc.Models;
@using Telerik.Sitefinity.Modules.Pages;

<ul class="footer-share">
	<li>
		<a href="#" class="share-trigger"><i class="fa fa-share"></i>Share</a>
	</li>
</ul>
<div class="share-dropdown">
	<ul class="@Model.CssClass">
		@foreach (var node in Model.Nodes)
		{
			@RenderRootLevelNode(node);
		}
	</ul>
</div>



@*Here is specified the rendering for the root level*@
@helper RenderRootLevelNode(NodeViewModel node)
{
	if (node.ChildNodes.Count > 0)
	{
		@RenderSubLevelsRecursive(node)
	}
	else
	{
		<li><a href="@node.Url" target="@node.LinkTarget">@node.Title</a></li>
	}
}

@*Here is specified the rendering for all child levels*@
@helper RenderSubLevelsRecursive(NodeViewModel node)
{
	foreach (var childNode in node.ChildNodes)
	{
		if (childNode.ChildNodes.Count > 0)
		{
			<li class="">
				<a href="@childNode.Url" target="@childNode.LinkTarget">
					@childNode.Title
				</a>
				<ul class="">
					@RenderSubLevelsRecursive(childNode)
				</ul>
			</li>
		}
		else
		{
			<li>
				<a href="@childNode.Url" class="share-@childNode.Title.ToLower()" target="@childNode.LinkTarget">@GetSocialIcon(childNode.Title)</a>
			</li>
		}
	}
}


@helper GetSocialIcon(string title)
{
	switch (title.ToLower())
	{
		case "facebook":
			@Html.Raw("<i class='fa fa-facebook'></i>");
		break;
		case "twitter":
			@Html.Raw("<i class='fa fa-twitter'></i>");
			break;
		default:
			break;
	}
}
